{"version":3,"file":"js/583.88702846.js","mappings":"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","sources":["webpack://mycms/../../../../packages/components/tree/src/model/util.ts","webpack://mycms/../../../../packages/components/tree/src/model/node.ts","webpack://mycms/../../../../packages/components/tree/src/model/tree-store.ts","webpack://mycms/./node_modules/element-plus/node_modules/@element-plus/icons-vue/dist/es/caret-right.mjs","webpack://mycms/../../../../packages/components/tree/src/tree-node-content.vue","webpack://mycms/../../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts","webpack://mycms/../../../../packages/components/tree/src/model/useDragNode.ts","webpack://mycms/../../../../packages/components/tree/src/tree-node.vue","webpack://mycms/../../../../packages/components/tree/src/model/useKeydown.ts","webpack://mycms/../../../../packages/components/tree/src/tree.vue","webpack://mycms/../../../../packages/components/tree/index.ts","webpack://mycms/./src/pages/home/system/role/Role.vue?e528","webpack://mycms/./src/pages/home/system/role/config/search.config.ts","webpack://mycms/./src/pages/home/system/role/config/content.config.ts","webpack://mycms/./src/pages/home/system/role/config/modal.config.ts","webpack://mycms/./src/utils/mapMenuLeaf.ts","webpack://mycms/./src/pages/home/system/role/Role.vue","webpack://mycms/./src/pages/home/system/role/Role.vue?6075","webpack://mycms/../../../../packages/components/collapse-transition/src/collapse-transition.vue","webpack://mycms/../../../../packages/components/collapse-transition/index.ts"],"sourcesContent":["import type Node from './node'\nimport type { TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n","import { reactive } from 'vue'\nimport { hasOwn } from '@element-plus/utils'\nimport { NODE_KEY, markNodeData } from './util'\nimport type TreeStore from './tree-store'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  FakeNode,\n  TreeKey,\n  TreeNodeChildState,\n  TreeNodeData,\n  TreeNodeLoadedDefaultProps,\n  TreeNodeOptions,\n} from '../tree.type'\n\nexport const getChildState = (node: Node[]): TreeNodeChildState => {\n  let all = true\n  let none = true\n  let allWithoutDisable = true\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i]\n    if (n.checked !== true || n.indeterminate) {\n      all = false\n      if (!n.disabled) {\n        allWithoutDisable = false\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false\n    }\n  }\n\n  return { all, none, allWithoutDisable, half: !all && !none }\n}\n\nconst reInitChecked = function (node: Node): void {\n  if (node.childNodes.length === 0) return\n\n  const { all, none, half } = getChildState(node.childNodes)\n  if (all) {\n    node.checked = true\n    node.indeterminate = false\n  } else if (half) {\n    node.checked = false\n    node.indeterminate = true\n  } else if (none) {\n    node.checked = false\n    node.indeterminate = false\n  }\n\n  const parent = node.parent\n  if (!parent || parent.level === 0) return\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent)\n  }\n}\n\nconst getPropertyFromData = function (node: Node, prop: string): any {\n  const props = node.store.props\n  const data = node.data || {}\n  const config = props[prop]\n\n  if (typeof config === 'function') {\n    return config(data, node)\n  } else if (typeof config === 'string') {\n    return data[config]\n  } else if (typeof config === 'undefined') {\n    const dataProp = data[prop]\n    return dataProp === undefined ? '' : dataProp\n  }\n}\n\nlet nodeIdSeed = 0\n\nclass Node {\n  id: number\n  text: string\n  checked: boolean\n  indeterminate: boolean\n  data: TreeNodeData\n  expanded: boolean\n  parent: Node\n  visible: boolean\n  isCurrent: boolean\n  store: TreeStore\n  isLeafByUser: boolean\n  isLeaf: boolean\n  canFocus: boolean\n\n  level: number\n  loaded: boolean\n  childNodes: Node[]\n  loading: boolean\n\n  constructor(options: TreeNodeOptions) {\n    this.id = nodeIdSeed++\n    this.text = null\n    this.checked = false\n    this.indeterminate = false\n    this.data = null\n    this.expanded = false\n    this.parent = null\n    this.visible = true\n    this.isCurrent = false\n    this.canFocus = false\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name]\n      }\n    }\n\n    // internal\n    this.level = 0\n    this.loaded = false\n    this.childNodes = []\n    this.loading = false\n\n    if (this.parent) {\n      this.level = this.parent.level + 1\n    }\n  }\n\n  initialize() {\n    const store = this.store\n    if (!store) {\n      throw new Error('[Node]store is required!')\n    }\n    store.registerNode(this)\n\n    const props = store.props\n    if (props && typeof props.isLeaf !== 'undefined') {\n      const isLeaf = getPropertyFromData(this, 'isLeaf')\n      if (typeof isLeaf === 'boolean') {\n        this.isLeafByUser = isLeaf\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data)\n\n      if (store.defaultExpandAll) {\n        this.expanded = true\n        this.canFocus = true\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand()\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data)\n    }\n    if (!this.data) return\n\n    const defaultExpandedKeys = store.defaultExpandedKeys\n    const key = store.key\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent)\n    }\n\n    if (\n      key &&\n      store.currentNodeKey !== undefined &&\n      this.key === store.currentNodeKey\n    ) {\n      store.currentNode = this\n      store.currentNode.isCurrent = true\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this)\n    }\n\n    this.updateLeafState()\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true\n  }\n\n  setData(data: TreeNodeData): void {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data)\n    }\n\n    this.data = data\n    this.childNodes = []\n\n    let children\n    if (this.level === 0 && Array.isArray(this.data)) {\n      children = this.data\n    } else {\n      children = getPropertyFromData(this, 'children') || []\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] })\n    }\n  }\n\n  get label(): string {\n    return getPropertyFromData(this, 'label')\n  }\n\n  get key(): TreeKey {\n    const nodeKey = this.store.key\n    if (this.data) return this.data[nodeKey]\n    return null\n  }\n\n  get disabled(): boolean {\n    return getPropertyFromData(this, 'disabled')\n  }\n\n  get nextSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return parent.childNodes[index + 1]\n      }\n    }\n    return null\n  }\n\n  get previousSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null\n      }\n    }\n    return null\n  }\n\n  contains(target: Node, deep = true): boolean {\n    return (this.childNodes || []).some(\n      (child) => child === target || (deep && child.contains(target))\n    )\n  }\n\n  remove(): void {\n    const parent = this.parent\n    if (parent) {\n      parent.removeChild(this)\n    }\n  }\n\n  insertChild(child?: FakeNode | Node, index?: number, batch?: boolean): void {\n    if (!child) throw new Error('InsertChild error: child is required.')\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true)\n        if (!children.includes(child.data)) {\n          if (typeof index === 'undefined' || index < 0) {\n            children.push(child.data)\n          } else {\n            children.splice(index, 0, child.data)\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store,\n      })\n      child = reactive(new Node(child as TreeNodeOptions))\n      if (child instanceof Node) {\n        child.initialize()\n      }\n    }\n\n    ;(child as Node).level = this.level + 1\n\n    if (typeof index === 'undefined' || index < 0) {\n      this.childNodes.push(child as Node)\n    } else {\n      this.childNodes.splice(index, 0, child as Node)\n    }\n\n    this.updateLeafState()\n  }\n\n  insertBefore(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n    }\n    this.insertChild(child, index)\n  }\n\n  insertAfter(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n      if (index !== -1) index += 1\n    }\n    this.insertChild(child, index)\n  }\n\n  removeChild(child: Node): void {\n    const children = this.getChildren() || []\n    const dataIndex = children.indexOf(child.data)\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1)\n    }\n\n    const index = this.childNodes.indexOf(child)\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child)\n      child.parent = null\n      this.childNodes.splice(index, 1)\n    }\n\n    this.updateLeafState()\n  }\n\n  removeChildByData(data: TreeNodeData): void {\n    let targetNode: Node = null\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i]\n        break\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode)\n    }\n  }\n\n  expand(callback?: () => void, expandParent?: boolean): void {\n    const done = (): void => {\n      if (expandParent) {\n        let parent = this.parent\n        while (parent.level > 0) {\n          parent.expanded = true\n          parent = parent.parent\n        }\n      }\n      this.expanded = true\n      if (callback) callback()\n      this.childNodes.forEach((item) => {\n        item.canFocus = true\n      })\n    }\n\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true)\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this)\n          }\n          done()\n        }\n      })\n    } else {\n      done()\n    }\n  }\n\n  doCreateChildren(\n    array: TreeNodeData[],\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ): void {\n    array.forEach((item) => {\n      this.insertChild(\n        Object.assign({ data: item }, defaultProps),\n        undefined,\n        true\n      )\n    })\n  }\n\n  collapse(): void {\n    this.expanded = false\n    this.childNodes.forEach((item) => {\n      item.canFocus = false\n    })\n  }\n\n  shouldLoadData(): boolean {\n    return this.store.lazy === true && this.store.load && !this.loaded\n  }\n\n  updateLeafState(): void {\n    if (\n      this.store.lazy === true &&\n      this.loaded !== true &&\n      typeof this.isLeafByUser !== 'undefined'\n    ) {\n      this.isLeaf = this.isLeafByUser\n      return\n    }\n    const childNodes = this.childNodes\n    if (\n      !this.store.lazy ||\n      (this.store.lazy === true && this.loaded === true)\n    ) {\n      this.isLeaf = !childNodes || childNodes.length === 0\n      return\n    }\n    this.isLeaf = false\n  }\n\n  setChecked(\n    value?: boolean | string,\n    deep?: boolean,\n    recursion?: boolean,\n    passValue?: boolean\n  ) {\n    this.indeterminate = value === 'half'\n    this.checked = value === true\n\n    if (this.store.checkStrictly) return\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes)\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false\n        value = false\n      }\n\n      const handleDescendants = (): void => {\n        if (deep) {\n          const childNodes = this.childNodes\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i]\n            passValue = passValue || value !== false\n            const isCheck = child.disabled ? child.checked : passValue\n            child.setChecked(isCheck, deep, true, passValue)\n          }\n          const { half, all } = getChildState(childNodes)\n          if (!all) {\n            this.checked = all\n            this.indeterminate = half\n          }\n        }\n      }\n\n      if (this.shouldLoadData()) {\n        // Only work on lazy load data.\n        this.loadData(\n          () => {\n            handleDescendants()\n            reInitChecked(this)\n          },\n          {\n            checked: value !== false,\n          }\n        )\n        return\n      } else {\n        handleDescendants()\n      }\n    }\n\n    const parent = this.parent\n    if (!parent || parent.level === 0) return\n\n    if (!recursion) {\n      reInitChecked(parent)\n    }\n  }\n\n  getChildren(forceInit = false): TreeNodeData | TreeNodeData[] {\n    // this is data\n    if (this.level === 0) return this.data\n    const data = this.data\n    if (!data) return null\n\n    const props = this.store.props\n    let children = 'children'\n    if (props) {\n      children = props.children || 'children'\n    }\n\n    if (data[children] === undefined) {\n      data[children] = null\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = []\n    }\n\n    return data[children]\n  }\n\n  updateChildren(): void {\n    const newData = (this.getChildren() || []) as TreeNodeData[]\n    const oldData = this.childNodes.map((node) => node.data)\n\n    const newDataMap = {}\n    const newNodes = []\n\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY]\n      const isNodeExists =\n        !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item }\n      } else {\n        newNodes.push({ index, data: item })\n      }\n    })\n\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item)\n      })\n    }\n\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index)\n    })\n\n    this.updateLeafState()\n  }\n\n  loadData(\n    callback: (node: Node) => void,\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ) {\n    if (\n      this.store.lazy === true &&\n      this.store.load &&\n      !this.loaded &&\n      (!this.loading || Object.keys(defaultProps).length)\n    ) {\n      this.loading = true\n\n      const resolve = (children) => {\n        this.loaded = true\n        this.loading = false\n        this.childNodes = []\n\n        this.doCreateChildren(children, defaultProps)\n\n        this.updateLeafState()\n        if (callback) {\n          callback.call(this, children)\n        }\n      }\n\n      this.store.load(this, resolve)\n    } else {\n      if (callback) {\n        callback.call(this)\n      }\n    }\n  }\n}\n\nexport default Node\n","import { hasOwn } from '@element-plus/utils'\nimport Node from './node'\nimport { getNodeKey } from './util'\n\nimport type {\n  FilterNodeMethodFunction,\n  FilterValue,\n  LoadFunction,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n  TreeOptionProps,\n  TreeStoreNodesMap,\n  TreeStoreOptions,\n} from '../tree.type'\n\nexport default class TreeStore {\n  currentNode: Node\n  currentNodeKey: TreeKey\n  nodesMap: TreeStoreNodesMap\n  root: Node\n  data: TreeData\n  lazy: boolean\n  load: LoadFunction\n  filterNodeMethod: FilterNodeMethodFunction\n  key: TreeKey\n  defaultCheckedKeys: TreeKey[]\n  checkStrictly: boolean\n  defaultExpandedKeys: TreeKey[]\n  autoExpandParent: boolean\n  defaultExpandAll: boolean\n  checkDescendants: boolean\n  props: TreeOptionProps\n\n  constructor(options: TreeStoreOptions) {\n    this.currentNode = null\n    this.currentNodeKey = null\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option]\n      }\n    }\n\n    this.nodesMap = {}\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this,\n    })\n    this.root.initialize()\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data)\n        this._initDefaultCheckedNodes()\n      })\n    } else {\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  filter(value: FilterValue): void {\n    const filterNodeMethod = this.filterNodeMethod\n    const lazy = this.lazy\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child)\n\n        traverse(child)\n      })\n\n      if (!(node as Node).visible && childNodes.length) {\n        let allHidden = true\n        allHidden = !childNodes.some((child) => child.visible)\n\n        if ((node as TreeStore).root) {\n          ;(node as TreeStore).root.visible = allHidden === false\n        } else {\n          ;(node as Node).visible = allHidden === false\n        }\n      }\n      if (!value) return\n\n      if ((node as Node).visible && !(node as Node).isLeaf && !lazy)\n        (node as Node).expand()\n    }\n\n    traverse(this)\n  }\n\n  setData(newVal: TreeData): void {\n    const instanceChanged = newVal !== this.root.data\n    if (instanceChanged) {\n      this.root.setData(newVal)\n      this._initDefaultCheckedNodes()\n    } else {\n      this.root.updateChildren()\n    }\n  }\n\n  getNode(data: TreeKey | TreeNodeData): Node {\n    if (data instanceof Node) return data\n    const key = typeof data !== 'object' ? data : getNodeKey(this.key, data)\n    return this.nodesMap[key] || null\n  }\n\n  insertBefore(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertBefore({ data }, refNode)\n  }\n\n  insertAfter(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertAfter({ data }, refNode)\n  }\n\n  remove(data: TreeNodeData | Node): void {\n    const node = this.getNode(data)\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null\n      }\n      node.parent.removeChild(node)\n    }\n  }\n\n  append(data: TreeNodeData, parentData: TreeNodeData | TreeKey | Node): void {\n    const parentNode = parentData ? this.getNode(parentData) : this.root\n\n    if (parentNode) {\n      parentNode.insertChild({ data })\n    }\n  }\n\n  _initDefaultCheckedNodes(): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n    const nodesMap = this.nodesMap\n\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey]\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly)\n      }\n    })\n  }\n\n  _initDefaultCheckedNode(node: Node): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly)\n    }\n  }\n\n  setDefaultCheckedKey(newVal: TreeKey[]): void {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  registerNode(node: Node): void {\n    const key = this.key\n    if (!node || !node.data) return\n\n    if (!key) {\n      this.nodesMap[node.id] = node\n    } else {\n      const nodeKey = node.key\n      if (nodeKey !== undefined) this.nodesMap[node.key] = node\n    }\n  }\n\n  deregisterNode(node: Node): void {\n    const key = this.key\n    if (!key || !node || !node.data) return\n\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child)\n    })\n\n    delete this.nodesMap[node.key]\n  }\n\n  getCheckedNodes(\n    leafOnly = false,\n    includeHalfChecked = false\n  ): TreeNodeData[] {\n    const checkedNodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (\n          (child.checked || (includeHalfChecked && child.indeterminate)) &&\n          (!leafOnly || (leafOnly && child.isLeaf))\n        ) {\n          checkedNodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return checkedNodes\n  }\n\n  getCheckedKeys(leafOnly = false): TreeKey[] {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key])\n  }\n\n  getHalfCheckedNodes(): TreeNodeData[] {\n    const nodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return nodes\n  }\n\n  getHalfCheckedKeys(): TreeKey[] {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key])\n  }\n\n  _getAllNodes(): Node[] {\n    const allNodes: Node[] = []\n    const nodesMap = this.nodesMap\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey])\n      }\n    }\n\n    return allNodes\n  }\n\n  updateChildren(key: TreeKey, data: TreeData): void {\n    const node = this.nodesMap[key]\n    if (!node) return\n    const childNodes = node.childNodes\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i]\n      this.remove(child.data)\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i]\n      this.append(child, node.data)\n    }\n  }\n\n  _setCheckedKeys(\n    key: TreeKey,\n    leafOnly = false,\n    checkedKeys: { [key: string]: boolean }\n  ): void {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level)\n    const cache = Object.create(null)\n    const keys = Object.keys(checkedKeys)\n    allNodes.forEach((node) => node.setChecked(false, false))\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i]\n      const nodeKey = node.data[key].toString()\n      const checked = keys.includes(nodeKey)\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false)\n        }\n        continue\n      }\n\n      let parent = node.parent\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true\n        parent = parent.parent\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false)\n        continue\n      }\n      node.setChecked(true, true)\n\n      if (leafOnly) {\n        node.setChecked(false, false)\n        const traverse = function (node: Node): void {\n          const childNodes = node.childNodes\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false)\n            }\n            traverse(child)\n          })\n        }\n        traverse(node)\n      }\n    }\n  }\n\n  setCheckedNodes(array: Node[], leafOnly = false): void {\n    const key = this.key\n    const checkedKeys = {}\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setCheckedKeys(keys: TreeKey[], leafOnly = false): void {\n    this.defaultCheckedKeys = keys\n    const key = this.key\n    const checkedKeys = {}\n    keys.forEach((key) => {\n      checkedKeys[key] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setDefaultExpandedKeys(keys: TreeKey[]) {\n    keys = keys || []\n    this.defaultExpandedKeys = keys\n    keys.forEach((key) => {\n      const node = this.getNode(key)\n      if (node) node.expand(null, this.autoExpandParent)\n    })\n  }\n\n  setChecked(\n    data: TreeKey | TreeNodeData,\n    checked: boolean,\n    deep: boolean\n  ): void {\n    const node = this.getNode(data)\n\n    if (node) {\n      node.setChecked(!!checked, deep)\n    }\n  }\n\n  getCurrentNode(): Node {\n    return this.currentNode\n  }\n\n  setCurrentNode(currentNode: Node): void {\n    const prevCurrentNode = this.currentNode\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false\n    }\n    this.currentNode = currentNode\n    this.currentNode.isCurrent = true\n  }\n\n  setUserCurrentNode(node: Node, shouldAutoExpandParent = true): void {\n    const key = node[this.key]\n    const currNode = this.nodesMap[key]\n    this.setCurrentNode(currNode)\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true)\n    }\n  }\n\n  setCurrentNodeKey(key: TreeKey, shouldAutoExpandParent = true): void {\n    if (key === null || key === undefined) {\n      this.currentNode && (this.currentNode.isCurrent = false)\n      this.currentNode = null\n      return\n    }\n    const node = this.getNode(key)\n    if (node) {\n      this.setCurrentNode(node)\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true)\n      }\n    }\n  }\n}\n","import { defineComponent, openBlock, createElementBlock, createElementVNode } from 'vue';\nimport _export_sfc from './_virtual/plugin-vue_export-helper.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"CaretRight\"\n});\nconst _hoisted_1 = {\n  viewBox: \"0 0 1024 1024\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_2 = /* @__PURE__ */ createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M384 192v640l384-320.064z\"\n}, null, -1);\nconst _hoisted_3 = [\n  _hoisted_2\n];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"svg\", _hoisted_1, _hoisted_3);\n}\nvar caretRight = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { caretRight as default };\n","<script lang=\"ts\">\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n","import { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n","import { provide, ref } from 'vue'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (\n      typeof props.allowDrag === 'function' &&\n      !props.allowDrag(treeNode.node)\n    ) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (typeof props.allowDrop === 'function') {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n","<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n","import { onBeforeUnmount, onMounted, onUpdated, shallowRef, watch } from 'vue'\nimport { off, on } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type TreeStore from './tree-store'\n\nimport type { Ref } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\ninterface UseKeydownOption {\n  el$: Ref<HTMLElement>\n}\nexport function useKeydown({ el$ }: UseKeydownOption, store: Ref<TreeStore>) {\n  const ns = useNamespace('tree')\n\n  const treeItems = shallowRef<Nullable<HTMLElement>[]>([])\n  const checkboxItems = shallowRef<Nullable<HTMLElement>[]>([])\n\n  onMounted(() => {\n    initTabIndex()\n    on(el$.value, 'keydown', handleKeydown)\n  })\n\n  onBeforeUnmount(() => {\n    off(el$.value, 'keydown', handleKeydown)\n  })\n\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll('[role=treeitem]'))\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n  })\n\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n  })\n\n  const handleKeydown = (ev: KeyboardEvent): void => {\n    const currentItem = ev.target as HTMLElement\n    if (!currentItem.className.includes(ns.b('node'))) return\n    const code = ev.code\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const currentIndex = treeItems.value.indexOf(currentItem)\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault()\n      if (code === EVENT_CODE.up) {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex !== 0\n            ? currentIndex - 1\n            : treeItems.value.length - 1\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex--\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1\n          }\n        }\n      } else {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex < treeItems.value.length - 1\n            ? currentIndex + 1\n            : 0\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex++\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus()\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault()\n      currentItem.click()\n    }\n    const hasInput = currentItem.querySelector(\n      '[type=\"checkbox\"]'\n    ) as Nullable<HTMLInputElement>\n    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {\n      ev.preventDefault()\n      hasInput.click()\n    }\n  }\n\n  const initTabIndex = (): void => {\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    const checkedItem = el$.value.querySelectorAll(\n      `.${ns.is('checked')}[role=treeitem]`\n    )\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute('tabindex', '0')\n      return\n    }\n    treeItems.value[0]?.setAttribute('tabindex', '0')\n  }\n}\n","<template>\n  <div\n    ref=\"el$\"\n    :class=\"[\n      ns.b(),\n      ns.is('dragging', !!dragState.draggingNode),\n      ns.is('drop-not-allow', !dragState.allowDrop),\n      ns.is('drop-inner', dragState.dropType === 'inner'),\n      { [ns.m('highlight-current')]: highlightCurrent },\n    ]\"\n    role=\"tree\"\n  >\n    <el-tree-node\n      v-for=\"child in root.childNodes\"\n      :key=\"getNodeKey(child)\"\n      :node=\"child\"\n      :props=\"props\"\n      :accordion=\"accordion\"\n      :render-after-expand=\"renderAfterExpand\"\n      :show-checkbox=\"showCheckbox\"\n      :render-content=\"renderContent\"\n      @node-expand=\"handleNodeExpand\"\n    />\n    <div v-if=\"isEmpty\" :class=\"ns.e('empty-block')\">\n      <span :class=\"ns.e('empty-text')\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n    <div\n      v-show=\"dragState.showDropIndicator\"\n      ref=\"dropIndicator$\"\n      :class=\"ns.e('drop-indicator')\"\n    />\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport TreeStore from './model/tree-store'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport ElTreeNode from './tree-node.vue'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { useDragNodeHandler } from './model/useDragNode'\nimport { useKeydown } from './model/useKeydown'\nimport type Node from './model/node'\n\nimport type { Component, ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  TreeComponentProps,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n} from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTree',\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    emptyText: {\n      type: String,\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true,\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true,\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false,\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true,\n    },\n    defaultCheckedKeys: Array as PropType<\n      TreeComponentProps['defaultCheckedKeys']\n    >,\n    defaultExpandedKeys: Array as PropType<\n      TreeComponentProps['defaultExpandedKeys']\n    >,\n    currentNodeKey: [String, Number] as PropType<string | number>,\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object as PropType<TreeComponentProps['props']>,\n      default: () => ({\n        children: 'children',\n        label: 'label',\n        disabled: 'disabled',\n      }),\n    },\n    lazy: {\n      type: Boolean,\n      default: false,\n    },\n    highlightCurrent: Boolean,\n    load: Function as PropType<TreeComponentProps['load']>,\n    filterNodeMethod: Function as PropType<\n      TreeComponentProps['filterNodeMethod']\n    >,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18,\n    },\n    icon: [String, Object] as PropType<string | Component>,\n  },\n  emits: [\n    'check-change',\n    'current-change',\n    'node-click',\n    'node-contextmenu',\n    'node-collapse',\n    'node-expand',\n    'check',\n    'node-drag-start',\n    'node-drag-end',\n    'node-drop',\n    'node-drag-leave',\n    'node-drag-enter',\n    'node-drag-over',\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n\n    const store = ref<TreeStore>(\n      new TreeStore({\n        key: props.nodeKey,\n        data: props.data,\n        lazy: props.lazy,\n        props: props.props,\n        load: props.load,\n        currentNodeKey: props.currentNodeKey,\n        checkStrictly: props.checkStrictly,\n        checkDescendants: props.checkDescendants,\n        defaultCheckedKeys: props.defaultCheckedKeys,\n        defaultExpandedKeys: props.defaultExpandedKeys,\n        autoExpandParent: props.autoExpandParent,\n        defaultExpandAll: props.defaultExpandAll,\n        filterNodeMethod: props.filterNodeMethod,\n      })\n    )\n\n    store.value.initialize()\n\n    const root = ref<Node>(store.value.root)\n    const currentNode = ref<Node>(null)\n    const el$ = ref<Nullable<HTMLElement>>(null)\n    const dropIndicator$ = ref<Nullable<HTMLElement>>(null)\n\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store,\n    })\n\n    useKeydown({ el$ }, store)\n\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value\n      return (\n        !childNodes ||\n        childNodes.length === 0 ||\n        childNodes.every(({ visible }) => !visible)\n      )\n    })\n\n    watch(\n      () => props.defaultCheckedKeys,\n      (newVal) => {\n        store.value.setDefaultCheckedKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultExpandedKeys,\n      (newVal) => {\n        store.value.setDefaultExpandedKeys(newVal)\n      }\n    )\n\n    watch(\n      () => props.data,\n      (newVal) => {\n        store.value.setData(newVal)\n      },\n      { deep: true }\n    )\n\n    watch(\n      () => props.checkStrictly,\n      (newVal) => {\n        store.value.checkStrictly = newVal\n      }\n    )\n\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error('[Tree] filterNodeMethod is required when filter')\n      store.value.filter(value)\n    }\n\n    const getNodeKey = (node: Node) => {\n      return getNodeKeyUtil(props.nodeKey, node.data)\n    }\n\n    const getNodePath = (data: TreeKey | TreeNodeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getNodePath')\n      const node = store.value.getNode(data)\n      if (!node) return []\n      const path = [node.data]\n      let parent = node.parent\n      while (parent && parent !== root.value) {\n        path.push(parent.data)\n        parent = parent.parent\n      }\n      return path.reverse()\n    }\n\n    const getCheckedNodes = (\n      leafOnly?: boolean,\n      includeHalfChecked?: boolean\n    ): TreeNodeData[] => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked)\n    }\n\n    const getCheckedKeys = (leafOnly?: boolean): TreeKey[] => {\n      return store.value.getCheckedKeys(leafOnly)\n    }\n\n    const getCurrentNode = (): TreeNodeData => {\n      const currentNode = store.value.getCurrentNode()\n      return currentNode ? currentNode.data : null\n    }\n\n    const getCurrentKey = (): any => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getCurrentKey')\n      const currentNode = getCurrentNode()\n      return currentNode ? currentNode[props.nodeKey] : null\n    }\n\n    const setCheckedNodes = (nodes: Node[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedNodes')\n      store.value.setCheckedNodes(nodes, leafOnly)\n    }\n\n    const setCheckedKeys = (keys, leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedKeys')\n      store.value.setCheckedKeys(keys, leafOnly)\n    }\n\n    const setChecked = (\n      data: TreeKey | TreeNodeData,\n      checked: boolean,\n      deep: boolean\n    ) => {\n      store.value.setChecked(data, checked, deep)\n    }\n\n    const getHalfCheckedNodes = (): TreeNodeData[] => {\n      return store.value.getHalfCheckedNodes()\n    }\n\n    const getHalfCheckedKeys = (): TreeKey[] => {\n      return store.value.getHalfCheckedKeys()\n    }\n\n    const setCurrentNode = (node: Node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentNode')\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent)\n    }\n\n    const setCurrentKey = (key: TreeKey, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentKey')\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent)\n    }\n\n    const getNode = (data: TreeKey | TreeNodeData): Node => {\n      return store.value.getNode(data)\n    }\n\n    const remove = (data: TreeNodeData | Node) => {\n      store.value.remove(data)\n    }\n\n    const append = (\n      data: TreeNodeData,\n      parentNode: TreeNodeData | TreeKey | Node\n    ) => {\n      store.value.append(data, parentNode)\n    }\n\n    const insertBefore = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertBefore(data, refNode)\n    }\n\n    const insertAfter = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertAfter(data, refNode)\n    }\n\n    const handleNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const updateKeyChildren = (key: TreeKey, data: TreeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in updateKeyChild')\n      store.value.updateChildren(key, data)\n    }\n\n    provide('RootTree', {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance(),\n    } as any)\n\n    return {\n      ns,\n      // ref\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n\n      // computed\n      isEmpty,\n\n      // methods\n      filter,\n      getNodeKey,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren,\n    }\n  },\n})\n</script>\n","import Tree from './src/tree.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nTree.install = (app: App): void => {\n  app.component(Tree.name, Tree)\n}\n\nconst _Tree = Tree as SFCWithInstall<typeof Tree>\n\nexport default _Tree\nexport const ElTree = _Tree\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-61a3e104\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"role\"\n};\nconst _hoisted_2 = {\n  class: \"menu-tree\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PageSearch = _resolveComponent(\"PageSearch\");\n\n  const _component_PageContent = _resolveComponent(\"PageContent\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  const _component_PageModal = _resolveComponent(\"PageModal\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_PageSearch, {\n    searchFormConf: _ctx.searchFormConf,\n    onResetBtnClick: _ctx.handleResetClick,\n    onSubmitBtnClick: _ctx.handleSubmitClick\n  }, null, 8, [\"searchFormConf\", \"onResetBtnClick\", \"onSubmitBtnClick\"]), _createVNode(_component_PageContent, {\n    contentTableConf: _ctx.contentTableConf,\n    ref: \"pageContentRef\",\n    pageName: \"role\",\n    onNewBtnClick: _ctx.handleNewData,\n    onEditBtnClick: _ctx.handleEditData\n  }, null, 8, [\"contentTableConf\", \"onNewBtnClick\", \"onEditBtnClick\"]), _createVNode(_component_PageModal, {\n    ref: \"pageModalRef\",\n    defaultInfo: _ctx.defaultInfo,\n    otherInfo: _ctx.otherInfo,\n    modalConfig: _ctx.modalConf,\n    pageName: \"role\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_tree, {\n      ref: \"elTreeRef\",\n      data: _ctx.menus,\n      \"show-checkbox\": \"\",\n      \"node-key\": \"id\",\n      props: {\n        children: 'children',\n        label: 'name'\n      },\n      onCheck: _ctx.handleCheckChange\n    }, null, 8, [\"data\", \"onCheck\"])])]),\n    _: 1\n  }, 8, [\"defaultInfo\", \"otherInfo\", \"modalConfig\"])]);\n}","import { IForm } from '@/base-ui/form';\n\nexport const searchFormConf: IForm = {\n  labelWidth: '120px',\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '角色名称',\n      placeholder: '请输入角色名称'\n    },\n    {\n      field: 'intro',\n      type: 'input',\n      label: '权限介绍',\n      placeholder: '请输入权限介绍'\n    }\n    // {\n    //   field: 'createTime',\n    //   type: 'datepicker',\n    //   label: '创建时间',\n    //   otherOptions: {\n    //     startPlaceholder: '开始时间',\n    //     endPlaceholder: '结束时间',\n    //     type: 'daterange'\n    //   }\n    // }\n  ]\n};\n","export const contentTableConf = {\n  title: '角色列表',\n  propList: [\n    { prop: 'id', label: 'ID', minWidth: 100 },\n    { prop: 'name', label: '角色名', minWidth: '100' },\n    { prop: 'intro', label: '权限介绍', minWidth: '100' },\n    {\n      prop: 'createAt',\n      label: '创建时间',\n      minWidth: '250',\n      slotName: 'createAt'\n    },\n    {\n      prop: 'updateAt',\n      label: '更新时间',\n      minWidth: '250',\n      slotName: 'updateAt'\n    },\n    { label: '操作', minWidth: '120', slotName: 'handler' }\n  ],\n  showIndexColumn: true,\n  showSelectColumn: true\n};\n","import { IForm } from '@/base-ui/form';\n\nexport const modalConf: IForm = {\n  formItems: [\n    {\n      field: 'name',\n      type: 'input',\n      label: '角色名',\n      placeholder: '请输入角色名'\n    },\n    {\n      field: 'intro',\n      type: 'input',\n      label: '角色介绍',\n      placeholder: '请输入角色介绍'\n    }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n};\n","export function mapMenuLeafKeys(menuList: any[]) {\n  const leafKeys: number[] = [];\n  const _recurseGetLeaf = (menuList: any[]) => {\n    for (const menu of menuList) {\n      if (menu.children) {\n        _recurseGetLeaf(menu.children);\n      } else {\n        leafKeys.push(menu.id);\n      }\n    }\n  };\n  _recurseGetLeaf(menuList);\n  return leafKeys;\n}\n","import { defineComponent, ref, nextTick } from 'vue';\nimport PageSearch from '@/components/page-search/src/PageSearch.vue';\nimport PageContent from '@/components/page-content/src/PageContent.vue';\nimport { searchFormConf } from '@/pages/home/system/role/config/search.config';\nimport { contentTableConf } from '@/pages/home/system/role/config/content.config';\nimport { usePageSearch } from '@/hooks/usePageSearch';\nimport PageModal from '@/components/page-modal/src/PageModal.vue';\nimport { modalConf } from '@/pages/home/system/role/config/modal.config';\nimport { mapMenuLeafKeys } from '@/utils/mapMenuLeaf';\nimport { usePageModal } from '@/hooks/usePageModal';\nimport { useInitRootStore } from '@/stores/modules/root';\nimport { storeToRefs } from 'pinia';\nexport default defineComponent({\n  name: 'Role',\n  components: {\n    PageModal,\n    PageContent,\n    PageSearch\n  },\n\n  setup() {\n    //使用hooks注册搜索按钮事件\n    const {\n      pageContentRef,\n      handleResetClick,\n      handleSubmitClick\n    } = usePageSearch();\n    const elTreeRef = ref();\n\n    const editCallback = item => {\n      const leafKeys = mapMenuLeafKeys(item.menuList);\n      nextTick(() => {\n        console.log('测试');\n        elTreeRef.value?.setCheckedKeys(leafKeys, false);\n      });\n    };\n\n    const {\n      pageModalRef,\n      defaultInfo,\n      handleNewData,\n      handleEditData\n    } = usePageModal(undefined, editCallback); //网络请求获取menu数据\n\n    const initRootStore = useInitRootStore();\n    const {\n      entireMenu: menus\n    } = storeToRefs(initRootStore); //考虑其他选项信息\n\n    const otherInfo = ref({});\n\n    const handleCheckChange = (info1, info2) => {\n      const checkedKeys = info2.checkedKeys;\n      const halfCheckedKeys = info2.halfCheckedKeys;\n      const menuList = [...checkedKeys, ...halfCheckedKeys];\n      console.log('很好', menuList);\n      otherInfo.value = {\n        menuList\n      };\n    };\n\n    return {\n      searchFormConf,\n      contentTableConf,\n      pageContentRef,\n      handleResetClick,\n      handleSubmitClick,\n      modalConf,\n      handleCheckChange,\n      otherInfo,\n      menus,\n      elTreeRef,\n      pageModalRef,\n      defaultInfo,\n      handleNewData,\n      handleEditData\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./Role.vue?vue&type=template&id=61a3e104&scoped=true&ts=true\"\nimport script from \"./Role.vue?vue&type=script&lang=ts\"\nexport * from \"./Role.vue?vue&type=script&lang=ts\"\n\nimport \"./Role.vue?vue&type=style&index=0&id=61a3e104&scoped=true&lang=less\"\n\nimport exportComponent from \"G:\\\\前端学习\\\\Vue3\\\\cms\\\\mycms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61a3e104\"]])\n\nexport default __exports__","<template>\n  <transition :name=\"ns.b()\" v-on=\"on\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nexport default defineComponent({\n  name: 'ElCollapseTransition',\n  setup() {\n    const ns = useNamespace('collapse-transition')\n\n    return {\n      ns,\n      on: {\n        beforeEnter(el) {\n          if (!el.dataset) el.dataset = {}\n\n          el.dataset.oldPaddingTop = el.style.paddingTop\n          el.dataset.oldPaddingBottom = el.style.paddingBottom\n\n          el.style.maxHeight = 0\n          el.style.paddingTop = 0\n          el.style.paddingBottom = 0\n        },\n\n        enter(el) {\n          el.dataset.oldOverflow = el.style.overflow\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = `${el.scrollHeight}px`\n            el.style.paddingTop = el.dataset.oldPaddingTop\n            el.style.paddingBottom = el.dataset.oldPaddingBottom\n          } else {\n            el.style.maxHeight = 0\n            el.style.paddingTop = el.dataset.oldPaddingTop\n            el.style.paddingBottom = el.dataset.oldPaddingBottom\n          }\n\n          el.style.overflow = 'hidden'\n        },\n\n        afterEnter(el) {\n          el.style.maxHeight = ''\n          el.style.overflow = el.dataset.oldOverflow\n        },\n\n        beforeLeave(el) {\n          if (!el.dataset) el.dataset = {}\n          el.dataset.oldPaddingTop = el.style.paddingTop\n          el.dataset.oldPaddingBottom = el.style.paddingBottom\n          el.dataset.oldOverflow = el.style.overflow\n\n          el.style.maxHeight = `${el.scrollHeight}px`\n          el.style.overflow = 'hidden'\n        },\n\n        leave(el) {\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = 0\n            el.style.paddingTop = 0\n            el.style.paddingBottom = 0\n          }\n        },\n\n        afterLeave(el) {\n          el.style.maxHeight = ''\n          el.style.overflow = el.dataset.oldOverflow\n          el.style.paddingTop = el.dataset.oldPaddingTop\n          el.style.paddingBottom = el.dataset.oldPaddingBottom\n        },\n      },\n    }\n  },\n})\n</script>\n","import CollapseTransition from './src/collapse-transition.vue'\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nCollapseTransition.install = (app: App): void => {\n  app.component(CollapseTransition.name, CollapseTransition)\n}\n\nconst _CollapseTransition = CollapseTransition as SFCWithInstall<\n  typeof CollapseTransition\n>\n\nexport default _CollapseTransition\nexport const ElCollapseTransition = _CollapseTransition\n"],"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","parent","level","store","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","constructor","options","text","expanded","visible","isCurrent","canFocus","name","hasOwn","loaded","loading","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","includes","autoExpandParent","currentNodeKey","currentNode","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","nextSibling","index","indexOf","previousSibling","contains","target","deep","some","child","remove","removeChild","batch","getChildren","push","splice","assign","reactive","insertBefore","ref","insertAfter","dataIndex","deregisterNode","removeChildByData","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","doCreateChildren","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","keys","call","resolve","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","this","getNode","refData","refNode","append","parentData","parentNode","defaultCheckedKeys","checkedKey","setDefaultCheckedKey","getCheckedNodes","leafOnly","includeHalfChecked","checkedNodes","getCheckedKeys","getHalfCheckedNodes","nodes","getHalfCheckedKeys","_getAllNodes","allNodes","_setCheckedKeys","checkedKeys","sort","a","b","cache","create","toString","node2","setCheckedNodes","setCheckedKeys","key2","setDefaultExpandedKeys","getCurrentNode","setCurrentNode","prevCurrentNode","setUserCurrentNode","shouldAutoExpandParent","currNode","setCurrentNodeKey","_sfc_main","defineComponent","_hoisted_1","viewBox","xmlns","_hoisted_2","createElementVNode","fill","d","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","caretRight","_export_sfc","type","required","renderContent","Function","setup","ns","useNamespace","nodeInstance","inject","tree","h","_self","ctx","slots","default","class","be","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","provide","broadcastExpanded","accordion","childNode","dragEventsKey","Symbol","useDragNodeHandler","el$","dropIndicator$","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","emit","treeNodeDragOver","oldDropNode","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","draggingNodeCopy","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","instance","getCurrentInstance","debugWarn","childrenKey","watch","val","handleSelectChange","nextTick","getNodeKeyUtil","getNodeClass","nodeClassFunc","className","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","stopPropagation","ev","halfCheckedNodes","halfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","CaretRight","_createElementBlock","role","tabindex","onClick","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","_normalizeClass","_normalizeStyle","paddingLeft","indent","icon","_openBlock","_createBlock","_withModifiers","onChange","_createCommentVNode","_createVNode","withDirectives","_Fragment","_renderList","onNodeExpand","useKeydown","treeItems","shallowRef","checkboxItems","onMounted","initTabIndex","on","handleKeydown","onBeforeUnmount","off","onUpdated","from","querySelectorAll","checkbox","setAttribute","currentItem","code","currentIndex","nextIndex","EVENT_CODE","startIndex","dataset","focus","click","hasInput","_a","checkedItem","ElTreeNode","emptyText","String","Number","highlightCurrent","t","useLocale","isEmpty","computed","every","getNodePath","path","reverse","currentNode2","getCurrentKey","setCurrentKey","handleNodeExpand","updateKeyChildren","_toDisplayString","_withDirectives","Tree","app","component","_Tree","ElTree","render","_component_PageSearch","_component_PageContent","_component_el_tree","_component_PageModal","searchFormConf","onResetBtnClick","handleResetClick","onSubmitBtnClick","handleSubmitClick","contentTableConf","pageName","onNewBtnClick","handleNewData","onEditBtnClick","handleEditData","defaultInfo","otherInfo","modalConfig","modalConf","_","menus","onCheck","labelWidth","formItems","field","placeholder","title","propList","minWidth","slotName","showIndexColumn","showSelectColumn","colLayout","span","itemStyle","mapMenuLeafKeys","menuList","leafKeys","_recurseGetLeaf","menu","PageModal","PageContent","PageSearch","pageContentRef","usePageSearch","elTreeRef","editCallback","console","log","pageModalRef","usePageModal","undefined","initRootStore","entireMenu","info1","info2","__exports__","beforeEnter","el","oldPaddingTop","paddingTop","oldPaddingBottom","paddingBottom","maxHeight","enter","oldOverflow","overflow","scrollHeight","afterEnter","beforeLeave","leave","afterLeave","_Transition","_toHandlers","_renderSlot","CollapseTransition","_CollapseTransition"],"sourceRoot":""}